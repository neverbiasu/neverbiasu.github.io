"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1638],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}},57630:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>e});var n=a(20641);const l={},t=(0,a(66262).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<h1 id="在-python-中实现-mcp-服务器-使用-gradio-构建-ai-购物助手" tabindex="-1"><a class="header-anchor" href="#在-python-中实现-mcp-服务器-使用-gradio-构建-ai-购物助手"><span>在 Python 中实现 MCP 服务器：使用 Gradio 构建 AI 购物助手</span></a></h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li><a href="#%E7%9B%AE%E6%A0%87%EF%BC%9A%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA-ai-%E9%80%A0%E5%9E%8B%E5%B8%88">目标：你的个人 AI 造型师</a></li><li><a href="#%E6%9E%84%E5%BB%BA-gradio-mcp-%E6%9C%8D%E5%8A%A1%E5%99%A8">构建 Gradio MCP 服务器</a></li><li><a href="#%E9%85%8D%E7%BD%AE-vs-code">配置 VS Code</a></li><li><a href="#%E6%95%B4%E5%90%88%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9">整合所有内容</a></li><li><a href="#%E7%BB%93%E8%AE%BA">结论</a></li></ul><hr><p>各位 Python 开发者，想让你的大语言模型（LLM）拥有超能力吗？Gradio 正是实现这一目标的最快途径！借助 Gradio 的模型上下文协议（MCP）集成，你的 LLM 可以直接接入 Hugging Face Hub 上数以千计的 AI 模型和 Spaces。通过将 LLM 的通用推理能力与 Hugging Face 上的专业模型相结合，你的 LLM 将不再局限于回答文本问题，而是能真正解决你日常生活中的实际问题。对于 Python 开发者而言，Gradio 让实现强大的 MCP 服务器变得轻而易举，并提供以下特性：</p><ul><li><strong>自动将 Python 函数转换为 LLM 工具：</strong> 你 Gradio 应用中的每个 API 端点都会被自动转换成一个 MCP 工具，并附带相应的名称、描述和输入格式。你函数的文档字符串（docstring）将用于生成该工具及其参数的说明。</li><li><strong>实时进度通知：</strong> Gradio 会将进度通知实时传输到你的 MCP 客户端，让你能随时监控任务状态，而无需亲手实现这一功能。</li><li><strong>自动文件上传：</strong> 支持公共 URL，并能处理多种文件类型。</li></ul><p>想象一下这个场景：你讨厌购物，因为它耗时费力，而且你很怕亲自试穿衣服。如果有一个 LLM 能帮你搞定这一切呢？在本文中，我们将创建一个由 LLM 驱动的 AI 助手，它不仅能浏览在线服装店、寻找特定衣物，还能利用虚拟试穿模型，让你直观地看到这些衣服穿在你身上的效果。演示如下：</p><h2 id="目标-你的个人-ai-造型师" tabindex="-1"><a class="header-anchor" href="#目标-你的个人-ai-造型师"><span>目标：你的个人 AI 造型师</span></a></h2><p>为了打造我们的 AI 购物助手，我们将整合三大核心组件：</p><ol><li><strong><a href="https://huggingface.co/yisol/IDM-VTON" target="_blank" rel="noopener noreferrer">IDM-VTON</a> 扩散模型</strong>：这个 AI 模型负责实现虚拟试穿功能。它可以编辑现有照片，让照片里的人仿佛穿上了另一件衣服。我们将使用 Hugging Face Space 上的 IDM-VTON，点击<a href="https://huggingface.co/spaces/yisol/IDM-VTON" target="_blank" rel="noopener noreferrer">这里</a>即可访问。</li><li><strong>Gradio</strong>：Gradio 是一个开源的 Python 库，它能让你轻松构建 AI 驱动的 Web 应用，更关键的是，它能帮助我们创建 MCP 服务器。Gradio 将充当一座桥梁，让我们的 LLM 能够调用 IDM-VTON 模型及其他工具。</li><li><strong>Visual Studio Code 的 AI 聊天功能</strong>：我们将利用 VS Code 内置的 AI 聊天功能与我们的 AI 购物助手进行交互，该功能支持添加任意 MCP 服务器。这将为我们提供一个用户友好的界面，方便我们下达指令和查看虚拟试穿结果。</li></ol><h2 id="构建-gradio-mcp-服务器" tabindex="-1"><a class="header-anchor" href="#构建-gradio-mcp-服务器"><span>构建 Gradio MCP 服务器</span></a></h2><p>我们 AI 购物助手的核心是 Gradio MCP 服务器。该服务器将主要提供一个工具：</p><ol><li><strong><code>vton_generation</code></strong>：此函数接收一张人物模特图和一张服装图作为输入，然后利用 IDM-VTON 模型生成一张模特穿着该服装的新图片。</li></ol><p>以下是我们的 Gradio MCP 服务器的 Python 代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gradio_client </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Client, handle_file</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gradio </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gr</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">client </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Client</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;freddyaboulton/IDM-VTON&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">                hf_token</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;Your-token&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> vton_generation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">human_model_img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> garment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;使用 IDM-VTON 模型生成一张人物穿着服装的新图片。&quot;&quot;&quot;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    参数:</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        human_model_img: 穿着服装的人物模型。</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        garment: 要穿的服装。</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    output </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> client.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">predict</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        dict</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;background&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">handle_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(human_model_img), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;layers&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:[], </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;composite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        garm_img</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">handle_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(garment),</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        garment_des</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        is_checked</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        is_checked_crop</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        denoise_steps</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        seed</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        api_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/tryon&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> output[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">vton_mcp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gr.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    vton_generation,</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    inputs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        gr.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;filepath&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;人物模型图片 URL&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        gr.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;filepath&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;服装图片 URL 或文件&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ],</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    outputs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gr.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;filepath&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;生成的图片&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    vton_mcp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">launch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">mcp_server</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只需在 <code>launch()</code> 方法中设置 <code>mcp_server=True</code>，Gradio 就能自动将我们的 Python 函数转换为 LLM 能够理解和使用的 MCP 工具。我们函数的文档字符串（docstrings）会被用来生成工具及其参数的描述。</p><blockquote><p>请注意：最初的 IDM-VTON Space 是用 Gradio 4.x 版本实现的，该版本还不支持自动 MCP 功能。因此，在本次演示中，我们将构建一个 Gradio 接口，通过 Gradio API 客户端来查询原有的 Space。</p></blockquote><p>最后，用 Python 运行此脚本。</p><h2 id="配置-vs-code" tabindex="-1"><a class="header-anchor" href="#配置-vs-code"><span>配置 VS Code</span></a></h2><p>为了将我们的 Gradio MCP 服务器连接到 VS Code 的 AI 聊天功能，我们需要编辑 <code>mcp.json</code> 文件。这个配置文件会告诉 AI 聊天功能如何找到并与我们的 MCP 服务器进行交互。</p><p>你可以在命令面板中输入 <code>MCP</code> 并选择 <code>MCP: Open User Configuration</code> 来找到此文件。打开后，请确保以下服务器配置存在：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;servers&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;vton&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;url&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://127.0.0.1:7860/gradio_api/mcp/&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;playwright&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;command&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;npx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;args&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;-y&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;@playwright/mcp@latest&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>playwright</code> MCP 服务器能让我们的 AI 助手浏览网页。</p><blockquote><p>请确保 <code>vton</code> 服务器的 URL 与上一节中控制台打印出的 URL 一致。要运行 <code>playwright</code> MCP 服务器，你需要先安装 Node.js。</p></blockquote><h2 id="整合所有内容" tabindex="-1"><a class="header-anchor" href="#整合所有内容"><span>整合所有内容</span></a></h2><p>现在，我们可以开始与我们的 AI 购物助手互动了。在 VS Code 中打开一个新的聊天窗口，你可以向它发出这样的指令：</p><blockquote><p>“帮我逛逛优衣库网站，找几件蓝色的 T 恤，然后用我的照片 [你的图片-url] 给我看看其中三件的上身效果。”</p></blockquote><p>你可以参考上面的视频，看看实际操作的例子！</p><h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论"><span>结论</span></a></h2><p>Gradio、MCP 与强大的 AI 模型（如 IDM-VTON）的结合，为我们创造智能、实用的 AI 助手开启了无限可能。通过遵循本篇博文的步骤，你也可以构建属于自己的 AI 助手，来解决那些你最关心的问题！</p>',30)]))}]]),e=JSON.parse('{"path":"/zh/posts/reprints/gradio-vton-mcp.html","title":"在 Python 中实现 MCP 服务器：使用 Gradio 构建 AI 购物助手","lang":"zh-CN","frontmatter":{"title":"在 Python 中实现 MCP 服务器：使用 Gradio 构建 AI 购物助手","date":"2025-07-31T00:00:00.000Z","author":"Freddy Boulton","sidebar":"auto","description":"在 Python 中实现 MCP 服务器：使用 Gradio 构建 AI 购物助手 目录 目标：你的个人 AI 造型师 构建 Gradio MCP 服务器 配置 VS Code 整合所有内容 结论 各位 Python 开发者，想让你的大语言模型（LLM）拥有超能力吗？Gradio 正是实现这一目标的最快途径！借助 Gradio 的模型上下文协议（MCP...","gitInclude":[],"head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://neverbiasu.github.io/posts/reprints/gradio-vton-mcp.html"}],["meta",{"property":"og:url","content":"https://neverbiasu.github.io/zh/posts/reprints/gradio-vton-mcp.html"}],["meta",{"property":"og:site_name","content":"Nlog"}],["meta",{"property":"og:title","content":"在 Python 中实现 MCP 服务器：使用 Gradio 构建 AI 购物助手"}],["meta",{"property":"og:description","content":"在 Python 中实现 MCP 服务器：使用 Gradio 构建 AI 购物助手 目录 目标：你的个人 AI 造型师 构建 Gradio MCP 服务器 配置 VS Code 整合所有内容 结论 各位 Python 开发者，想让你的大语言模型（LLM）拥有超能力吗？Gradio 正是实现这一目标的最快途径！借助 Gradio 的模型上下文协议（MCP..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:author","content":"Freddy Boulton"}],["meta",{"property":"article:published_time","content":"2025-07-31T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在 Python 中实现 MCP 服务器：使用 Gradio 构建 AI 购物助手\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-07-31T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Freddy Boulton\\"}]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"目标：你的个人 AI 造型师","slug":"目标-你的个人-ai-造型师","link":"#目标-你的个人-ai-造型师","children":[]},{"level":2,"title":"构建 Gradio MCP 服务器","slug":"构建-gradio-mcp-服务器","link":"#构建-gradio-mcp-服务器","children":[]},{"level":2,"title":"配置 VS Code","slug":"配置-vs-code","link":"#配置-vs-code","children":[]},{"level":2,"title":"整合所有内容","slug":"整合所有内容","link":"#整合所有内容","children":[]},{"level":2,"title":"结论","slug":"结论","link":"#结论","children":[]}],"readingTime":{"minutes":5.04,"words":1513},"filePathRelative":"zh/posts/reprints/gradio-vton-mcp.md","localizedDate":"2025年7月31日","excerpt":"\\n<h2>目录</h2>\\n<ul>\\n<li><a href=\\"#%E7%9B%AE%E6%A0%87%EF%BC%9A%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA-ai-%E9%80%A0%E5%9E%8B%E5%B8%88\\">目标：你的个人 AI 造型师</a></li>\\n<li><a href=\\"#%E6%9E%84%E5%BB%BA-gradio-mcp-%E6%9C%8D%E5%8A%A1%E5%99%A8\\">构建 Gradio MCP 服务器</a></li>\\n<li><a href=\\"#%E9%85%8D%E7%BD%AE-vs-code\\">配置 VS Code</a></li>\\n<li><a href=\\"#%E6%95%B4%E5%90%88%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9\\">整合所有内容</a></li>\\n<li><a href=\\"#%E7%BB%93%E8%AE%BA\\">结论</a></li>\\n</ul>","autoDesc":true}')}}]);